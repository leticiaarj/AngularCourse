Arquivos .ts (Principais):
* Para utilizar o decorator @Component deve em primeiro lugar importar o modulo '@angular/core'.
* Selector: Define qual será a tag para o componente sendo criado.
* TemplateUrl: Define o caminho para o template do componente, podemos substituir esta propriedade 
por "template", que seria por exemplo o html do componente.
* StyleUrls: Caminho para o arquivo(s) css que serão utilizados pelo o componente.
* Providers: Bastante utilizado no decorator @Component, o providers define um array com os serviços 
que poderão ser utilizados no construtor do componente, via injeção de dependência.

Extra dos Arquivos .ts :
* Animations: Lista de animações do component.
* ChangeDetection: Estratégia de detectção de mudança do componente.
* Encapsulation: Tipo de encapsulamento utilizado pelo componente.
* EntryComponents: Lista componentes que são dinamicamente inseridos pelo componente.
* ExportAs: Nome pelo qual a instância do componente é exportada dentro do template.
* Host: Mapeamento de propriedades para bindings de eventos, propriedades e atributos.
* Inputs: Lista de propiedades para data-bind de entrada do componente.
* Interpolation: Marcadores de interpolação customizados usados no template do componente.
* ModuleId: ES/CommonJS - Id do modulo onde o componente é definido.
* Outputs: Lista de propriedade que expõem eventos aos quais outros componetes podem fazer uma subscricção.
* Queries: Consultas que podem ser injetadas no componente.
* ViewProviders: Lista de provedores disponíveis para este componente e sua respectiva view Children.

Criando componente -> ng g c

Abrindo o servidor -> ng serve

Criando um componente dentro do outro (Sub-componente) -> ng g c componente/nome sub-componente
